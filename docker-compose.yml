version: '3.6'

networks:
  app: {}

services:

  ################################# Persistence ###################################

  pulsar:
    restart: always
    image: apachepulsar/pulsar:2.9.1
    ports:
      - 6650:6650
      - 8080:8080
    command: >
      /bin/bash -c "bin/pulsar standalone"
    networks:
      - app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/admin/v2/brokers/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  redis:
    restart: always
    image: redis:6.0.8
    ports:
      - 6379:6379
    environment:
      - DEBUG=false
    networks:
      - app
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  ################################# Monitoring ###################################

  pulsar-manager:
    restart: always
    image: apachepulsar/pulsar-manager:v0.2.0
    ports:
      - 9527:9527
      - 7750:7750
    networks:
      - app
    depends_on:
      pulsar:
        condition: service_healthy
    volumes:
      - ./monitoring/pulsar-manager/application.properties:/pulsar-manager/custom.properties
    environment:
      - SPRING_CONFIGURATION_FILE=/pulsar-manager/custom.properties

  prometheus:
    restart: always
    image: prom/prometheus:v2.30.3
    ports:
      - 9090:9090
    networks:
      - app
    volumes:
      - ./monitoring/prometheus/config.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    links:
      - alerts:alerts
      - processor:processor
      - snapshots:snapshots
      - tracing:tracing
      - ws-server:ws-server
    healthcheck:
      test: ["CMD", "wget", "--tries=1", "--spider", "http://localhost:9090"]
      interval: 2s
      timeout: 5s
      retries: 15

  grafana:
    restart: always
    image: grafana/grafana:8.2.2
    ports:
      - 3000:3000
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - app
    volumes:
      - ./monitoring/grafana/:/etc/grafana/provisioning
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 2s
      timeout: 5s
      retries: 15

  ################################# Services ###################################

  ws-server:
    restart: always
    image: trading-ws:latest
    ports:
      - 9000:9000
    networks:
      - app
    environment:
      - HTTP_PORT=9000
      - PULSAR_URI=pulsar://pulsar:6650
    depends_on:
      pulsar:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  alerts:
    restart: always
    image: trading-alerts:latest
    ports:
      - 9004:9004
    networks:
      - app
    environment:
      - HTTP_PORT=9004
      - REDIS_URI=redis://redis
      - PULSAR_URI=pulsar://pulsar:6650
    depends_on:
      pulsar:
        condition: service_healthy
      redis:
        condition: service_healthy
      ws-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9004/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  processor:
    restart: always
    image: trading-processor:latest
    ports:
      - 9003:9003
    networks:
      - app
    environment:
      - HTTP_PORT=9003
      - REDIS_URI=redis://redis
      - PULSAR_URI=pulsar://pulsar:6650
    depends_on:
      pulsar:
        condition: service_healthy
      redis:
        condition: service_healthy
      ws-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  snapshots:
    restart: always
    image: trading-snapshots:latest
    ports:
      - 9002:9002
    networks:
      - app
    environment:
      - HTTP_PORT=9002
      - REDIS_URI=redis://redis
      - PULSAR_URI=pulsar://pulsar:6650
    depends_on:
      pulsar:
        condition: service_healthy
      redis:
        condition: service_healthy
      ws-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  tracing:
    restart: always
    image: trading-tracing:latest
    ports:
      - 9005:9005
    networks:
      - app
    environment:
      - HTTP_PORT=9005
      - PULSAR_URI=pulsar://pulsar:6650
      - HONEYCOMB_API_KEY=${HONEYCOMB_API_KEY}
    depends_on:
      pulsar:
        condition: service_healthy
      alerts:
        condition: service_healthy
      processor:
        condition: service_healthy
      snapshots:
        condition: service_healthy
      ws-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9005/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  forecasts:
    restart: always
    image: trading-forecasts:latest
    ports:
      - 9006:9006
    networks:
      - app
    environment:
      - HTTP_PORT=9006
      - PULSAR_URI=pulsar://pulsar:6650
    depends_on:
      pulsar:
        condition: service_healthy
      ws-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9006/health"]
      interval: 2s
      timeout: 5s
      retries: 15
      start_period: 2m

  # Does not work yet because of issues with sbt-native-packager (it depends on a test dependency).
  # Comment out the feed service if you don't want random data generation running in Docker
  #feed:
    #restart: always
    #image: trading-feed:latest
    #ports:
      #- "9001:9001"
    #networks:
      #- app
    #environment:
      #- HTTP_PORT=9001
      #- PULSAR_URI=pulsar://pulsar:6650
    #depends_on:
      #pulsar:
        #condition: service_healthy
      #alerts:
        #condition: service_healthy
      #processor:
        #condition: service_healthy
      #snapshots:
        #condition: service_healthy
      #ws-server:
        #condition: service_healthy
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      #interval: 2s
      #timeout: 5s
      #retries: 15
      #start_period: 2m
